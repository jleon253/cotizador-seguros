{"version":3,"sources":["components/Formulario/Formulario.jsx","Helper.js","components/Header/Header.jsx","components/Resumen/Resumen.jsx","components/Resultado/Resultado.jsx","components/Spinner/Spinner.jsx","App.js","serviceWorker.js","index.js"],"names":["Campo","styled","div","Label","label","Select","select","InputRadio","input","Boton","button","Mierror","Formulario","setResumen","setCargando","useState","marca","year","plan","datos","setDatos","error","setError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultadoBase","diferenciaYear","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","parseFloat","calcularPlan","toFixed","setTimeout","cotizacion","Number","onChange","className","type","checked","ContenedorHeader","header","TextoHeader","h1","Header","titulo","ContenerdorResumen","Resumen","Mensaje","h4","Total","Resultado","Spinner","Contenedor","ContenedorForm","App","resumen","cargando","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"41CASA,IAAMA,EAAQC,IAAOC,IAAV,KAMLC,EAAQF,IAAOG,MAAV,KAILC,EAASJ,IAAOK,OAAV,KAQNC,EAAaN,IAAOO,MAAV,KAIVC,EAAQR,IAAOS,OAAV,KAkBLC,EAAUV,IAAOC,IAAV,KAmHEU,EA5GI,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAAkB,EACzBC,mBAAS,CAClCC,MAAO,GACPC,KAAM,GACNC,KAAM,KAJ4C,mBAC5CC,EAD4C,KACrCC,EADqC,OAMzBL,oBAAS,GANgB,mBAM5CM,EAN4C,KAMrCC,EANqC,KAQ3CN,EAAsBG,EAAtBH,MAAOC,EAAeE,EAAfF,KAAMC,EAASC,EAATD,KAEfK,EAAqB,SAACC,GAC3BJ,EAAS,2BACLD,GADI,kBAENK,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAkC5B,OACC,0BAAMC,SA/Be,SAACJ,GAEtB,GADAA,EAAEK,iBACmB,KAAjBb,EAAMc,QAAiC,KAAhBb,EAAKa,QAAiC,KAAhBZ,EAAKY,OAAtD,CAIAR,GAAS,GAET,IAAIS,EAAgB,IAEdC,EClF6B,SAACf,GACpC,OAAO,IAAIgB,MAAOC,cAAgBjB,EDiFXkB,CAAsBlB,GAE7Cc,GAAmC,EAAjBC,EAAqBD,EAAiB,IAExDA,ECjF2B,SAACf,GAC5B,IAAIoB,EACJ,OAAQpB,GACN,IAAK,WACHoB,EAAa,KACb,MACF,IAAK,YACHA,EAAa,KACb,MACF,IAAK,UACHA,EAAa,IAKjB,OAAOA,EDkESC,CAAcrB,GAASe,EAEvCA,EAAgBO,WChEU,SAACpB,GAC3B,MAAiB,WAATA,EAAqB,IAAO,ID+DTqB,CAAarB,GAAQa,GAAeS,QAAQ,GAEvE1B,GAAY,GAEZ2B,YAAW,WACV3B,GAAY,GAEZD,EAAW,CACV6B,WAAYC,OAAOZ,GACnBZ,YAEC,UAxBFG,GAAS,KA6BRD,EAAQ,kBAACV,EAAD,oCAAiD,KAC1D,kBAACX,EAAD,KACC,kBAACG,EAAD,eACA,kBAACE,EAAD,CAAQqB,KAAK,QAAQC,MAAOX,EAAO4B,SAAUrB,GAC5C,4BAAQI,MAAM,IAAd,oBACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,WAAd,aAGF,kBAAC3B,EAAD,KACC,kBAACG,EAAD,gBACA,kBAACE,EAAD,CAAQqB,KAAK,OAAOC,MAAOV,EAAM2B,SAAUrB,GAC1C,4BAAQI,MAAM,IAAd,oBACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,UAGF,kBAAC3B,EAAD,KACK,kBAACG,EAAD,aACA,yBAAK0C,UAAU,cACb,kBAACtC,EAAD,CACEuC,KAAK,QACLpB,KAAK,OACLC,MAAM,SACNoB,QAAkB,WAAT7B,EACT0B,SAAUrB,IACT,IAPL,YASE,6BACA,6BACA,kBAAChB,EAAD,CACEuC,KAAK,QACLpB,KAAK,OACLC,MAAM,WACNoB,QAAkB,aAAT7B,EACT0B,SAAUrB,IACT,IAjBL,aAqBL,kBAACd,EAAD,CAAOqC,KAAK,UAAZ,a,kUEtJH,IAAME,EAAmB/C,IAAOgD,OAAV,KAOhBC,EAAcjD,IAAOkD,GAAV,KAmBFC,EAZA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACE,kBAACL,EAAD,KACE,kBAACE,EAAD,SAAgBG,EAAhB,O,yNChBN,IAAMC,EAAqBrD,IAAOC,IAAV,KA4BTqD,EAnBC,SAAC,GAAa,IAAZpC,EAAW,EAAXA,MACTH,EAAqBG,EAArBH,MAAOC,EAAcE,EAAdF,KAAMC,EAAQC,EAARD,KACpB,MAAa,KAAVF,GAAyB,KAATC,GAAwB,KAATC,EAAoB,KAEpD,kBAACoC,EAAD,CAAoBT,UAAU,uCAC5B,wDACA,4BACE,uCAAa7B,GACb,wCAAWC,GACX,sCAAYC,M,6VClBpB,IAAMsC,EAAUvD,IAAOwD,GAAV,KAOPC,EAAQzD,IAAOwD,GAAV,KAoBIE,EAZG,SAAC,GAAkB,IAAjBjB,EAAgB,EAAhBA,WAClB,OACkB,IAAfA,EACG,kBAACc,EAAD,CAASX,UAAU,uCAAnB,iDACA,kBAACa,EAAD,CAAOb,UAAU,uCAAjB,gBAAqEH,ICR9DkB,G,MAbC,WACd,OACE,yBAAKf,UAAU,YACb,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,oB,uPCArB,IAAMgB,EAAa5D,IAAOC,IAAV,KAMV4D,EAAiB7D,IAAOC,IAAV,KAsCL6D,MAjCf,WAAgB,IAAD,EACiBhD,mBAAS,CACrC2B,WAAY,EACZvB,MAAO,CACLH,MAAO,GACPC,KAAM,GACNC,KAAM,MANG,mBACN8C,EADM,KACGnD,EADH,OASmBE,oBAAS,GAT5B,mBASNkD,EATM,KASInD,EATJ,KAWN4B,EAAqBsB,EAArBtB,WAAYvB,EAAS6C,EAAT7C,MAEnB,OACE,kBAAC0C,EAAD,KACE,kBAAC,EAAD,CAAQR,OAAO,yBACf,kBAACS,EAAD,KACE,kBAAC,EAAD,CACEjD,WAAYA,EACZC,YAAaA,IAEdmD,EAAW,kBAAC,EAAD,MAAc,KACxBA,EAKC,KAJD,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAS9C,MAAOA,IAChB,kBAAC,EAAD,CAAWuB,WAAYA,QCnCfwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA7D,GACL8D,QAAQ9D,MAAMA,EAAM+D,c","file":"static/js/main.b43c5f94.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport styled from '@emotion/styled'\nimport {\n\tobtenerDiferenciaYear,\n\tcalcularMarca,\n\tcalcularPlan,\n} from '../../Helper'\nimport PropTypes from 'prop-types'\n\nconst Campo = styled.div`\n\tdisplay: flex;\n\tmargin-bottom: 1rem;\n\talign-items: center;\n`\n\nconst Label = styled.label`\n\tflex: 0 0 100px;\n`\n\nconst Select = styled.select`\n\tdisplay: block;\n\twidth: 100%;\n\tpadding: 1rem;\n\tborder: 1px solid #e1e1e1;\n\t-webkit-appearance: none;\n`\n\nconst InputRadio = styled.input`\n\tmargin: 0 1rem;\n`\n\nconst Boton = styled.button`\n\tdisplay: block;\n  margin: auto;\n  background-color: #00838f;\n\tfont-size: 16px;\n\twidth: 150px;\n\tpadding: 1rem;\n\tcolor: #fff;\n\ttext-transform: uppercase;\n\tfont-weight: bold;\n\tborder: none;\n\ttransition: background-color 0.5s ease-out;\n\t&:hover {\n\t\tcursor: pointer;\n\t\tbackground-color: #26c6da;\n\t}\n`\n\nconst Mierror = styled.div`\n\tpadding: 10px;\n\tcolor: white;\n\tbackground-color: red;\n\ttext-align: center;\n\tmargin-bottom: 10px;\n`\nconst Formulario = ({ setResumen, setCargando }) => {\n\tconst [datos, setDatos] = useState({\n\t\tmarca: '',\n\t\tyear: '',\n\t\tplan: '',\n\t})\n\tconst [error, setError] = useState(false)\n\n\tconst { marca, year, plan } = datos\n\n\tconst obtenerInformacion = (e) => {\n\t\tsetDatos({\n\t\t\t...datos,\n\t\t\t[e.target.name]: e.target.value,\n\t\t})\n\t}\n\n\tconst cotizarSeguro = (e) => {\n\t\te.preventDefault()\n\t\tif (marca.trim() === '' || year.trim() === '' || plan.trim() === '') {\n\t\t\tsetError(true)\n\t\t\treturn\n\t\t}\n\t\tsetError(false)\n\t\t// Una base de 2000\n\t\tlet resultadoBase = 2000\n\t\t// Obtener la diferencia en años\n\t\tconst diferenciaYear = obtenerDiferenciaYear(year)\n\t\t// Por cada año hay que restar el 3%\n\t\tresultadoBase -= (diferenciaYear * 3 * resultadoBase) / 100\n\t\t// Asiatico: 5% , Americano: 15% , Europeo: 30%\n\t\tresultadoBase = calcularMarca(marca) * resultadoBase\n\t\t// Basico aumenta 20%, Completo aumenta 50%\n\t\tresultadoBase = parseFloat(calcularPlan(plan) * resultadoBase).toFixed(2)\n\t\t// Cargando\n\t\tsetCargando(true)\n\n\t\tsetTimeout(() => {\n\t\t\tsetCargando(false)\n\t\t\t// Total\n\t\t\tsetResumen({\n\t\t\t\tcotizacion: Number(resultadoBase),\n\t\t\t\tdatos,\n\t\t\t})\n\t\t}, 2000)\n\t}\n\n\treturn (\n\t\t<form onSubmit={cotizarSeguro}>\n\t\t\t{error ? <Mierror>Los campos son obligatorios</Mierror> : null}\n\t\t\t<Campo>\n\t\t\t\t<Label>Marca:</Label>\n\t\t\t\t<Select name='marca' value={marca} onChange={obtenerInformacion}>\n\t\t\t\t\t<option value=''>-- Seleccione --</option>\n\t\t\t\t\t<option value='asiatico'>Asiatico</option>\n\t\t\t\t\t<option value='americano'>Americano</option>\n\t\t\t\t\t<option value='europeo'>Europeo</option>\n\t\t\t\t</Select>\n\t\t\t</Campo>\n\t\t\t<Campo>\n\t\t\t\t<Label>Año:</Label>\n\t\t\t\t<Select name='year' value={year} onChange={obtenerInformacion}>\n\t\t\t\t\t<option value=''>-- Seleccione --</option>\n\t\t\t\t\t<option value='2021'>2021</option>\n\t\t\t\t\t<option value='2020'>2020</option>\n\t\t\t\t\t<option value='2019'>2019</option>\n\t\t\t\t\t<option value='2018'>2018</option>\n\t\t\t\t\t<option value='2017'>2017</option>\n\t\t\t\t\t<option value='2016'>2016</option>\n\t\t\t\t\t<option value='2015'>2015</option>\n\t\t\t\t\t<option value='2014'>2014</option>\n\t\t\t\t\t<option value='2013'>2013</option>\n\t\t\t\t\t<option value='2012'>2012</option>\n\t\t\t\t</Select>\n\t\t\t</Campo>\n\t\t\t<Campo>\n        <Label>Plan</Label>\n        <div className=\"inputGroup\">\n          <InputRadio\n            type='radio'\n            name='plan'\n            value='basico'\n            checked={plan === 'basico'}\n            onChange={obtenerInformacion}\n          />{' '}\n          Básico\n          <br />\n          <br />\n          <InputRadio\n            type='radio'\n            name='plan'\n            value='completo'\n            checked={plan === 'completo'}\n            onChange={obtenerInformacion}\n          />{' '}\n          Completo\n        </div>\n\t\t\t</Campo>\n\t\t\t<Boton type='submit'>Cotizar</Boton>\n\t\t</form>\n\t)\n}\n\nFormulario.propTypes = {\n  setResumen : PropTypes.func.isRequired,\n  setCargando : PropTypes.func.isRequired\n}\n\nexport default Formulario\n","// Calcular la diferencia en años\nexport const obtenerDiferenciaYear = (year) => {\n  return new Date().getFullYear() - year;\n};\n\n// Calcular el total a pagar según la marca\nexport const calcularMarca = (marca) => {\n  let incremento;\n  switch (marca) {\n    case 'asiatico':\n      incremento = 1.05;\n      break;\n    case 'americano':\n      incremento = 1.15;\n      break;\n    case 'europeo':\n      incremento = 1.30;\n      break;\n    default:\n      break;\n  }\n  return incremento;\n};\n\n// Calculo por tipo de seguro\nexport const calcularPlan = (plan) => {\n  return (plan === 'basico') ? 1.20 : 1.50;\n};","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types'\n\nconst ContenedorHeader = styled.header`\n  background-color: #26c6da;\n  padding: 10px;\n  font-weight: bold;\n  color: #fff;\n`;\n\nconst TextoHeader = styled.h1`\n  font-size: 2rem;\n  margin: 0;\n  font-family: 'Slabo 27px', serif;\n  text-align: center;\n`;\n\nconst Header = ({titulo}) => {\n  return (\n    <ContenedorHeader>\n      <TextoHeader> { titulo } </TextoHeader>\n    </ContenedorHeader>\n  );\n};\n\nHeader.propTypes = {\n  titulo : PropTypes.string.isRequired\n}\n\nexport default Header;","import React from 'react';\nimport styled from '@emotion/styled';\nimport 'animate.css';\nimport PropTypes from 'prop-types'\n\nconst ContenerdorResumen = styled.div`\n  padding: 1rem;\n  text-align: center;\n  background-color: #6be3f2;\n  border: 1px solid #00838f;\n  color: #00838f;\n  margin-top: 1rem;\n`;\n\nconst Resumen = ({datos}) => {\n  const {marca, year, plan} = datos;\n  if(marca === '' || year === '' || plan === '') return null;\n  return (\n    <ContenerdorResumen className=\"animate__animated animate__fadeInUp\">\n      <h3>Resumen de cotización</h3>\n      <ul>\n        <li>Marca:  {marca}</li>\n        <li>Año:  {year}</li>\n        <li>Plan:  {plan}</li>\n      </ul>\n    </ContenerdorResumen>\n  );\n};\n\nResumen.propTypes = {\n  datos : PropTypes.object.isRequired\n}\n\nexport default Resumen;","import React from 'react';\nimport styled from '@emotion/styled';\nimport 'animate.css';\nimport PropTypes from 'prop-types'\n\nconst Mensaje = styled.h4`\n  text-align: center;\n  background-color: #f2f2f2;\n  padding: 2rem;\n  color: #a2a2a2;\n`;\n\nconst Total = styled.h4`\n  text-align: center;\n  background-color: #00838f;\n  padding: 2rem;\n  color: #fff;\n  text-transform: uppercase;\n`;\n\nconst Resultado = ({cotizacion}) => {\n  return (\n    (cotizacion === 0)\n      ? <Mensaje className=\"animate__animated animate__fadeInUp\">Elige una marca, año y plan para comenzar.</Mensaje>\n      : <Total className=\"animate__animated animate__fadeInUp\">El total es: {cotizacion}</Total>\n  );\n};\n\nResultado.propTypes = {\n  cotizacion : PropTypes.number.isRequired\n}\n\nexport default Resultado;","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"sk-chase\">\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n    </div>\n  );\n};\n\nexport default Spinner;","import React, { useState, Fragment } from 'react';\nimport styled from '@emotion/styled';\nimport './App.css';\n\nimport Formulario from './components/Formulario/Formulario';\n\nimport Header from './components/Header/Header'\nimport Resumen from './components/Resumen/Resumen';\nimport Resultado from './components/Resultado/Resultado';\nimport Spinner from './components/Spinner/Spinner';\n\nconst Contenedor = styled.div`\n  max-width: 90%;\n  min-width: 60%;\n  margin: 30px auto;\n`;\n\nconst ContenedorForm = styled.div`\n  background-color: #fff;\n  padding: 3rem;\n`;\n\nfunction App() {\n  const [resumen, setResumen] = useState({\n    cotizacion: 0,\n    datos: {\n      marca: '',\n      year: '',\n      plan: '',\n    }\n  });\n  const [cargando, setCargando] = useState(false);\n\n  const {cotizacion, datos} = resumen;\n\n  return (\n    <Contenedor>\n      <Header titulo=\"Cotizador de seguros\" />\n      <ContenedorForm>\n        <Formulario\n          setResumen={setResumen}\n          setCargando={setCargando}\n        />\n        {cargando ? <Spinner /> : null}\n        {!cargando ? \n          <Fragment>\n            <Resumen datos={datos}/>\n            <Resultado cotizacion={cotizacion}/>\n          </Fragment>\n         : null}\n      </ContenedorForm>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}